hook_add = '''

" Bash
let g:is_bash = 1

" Markdown
let g:markdown_fenced_languages = []

" Reload .vimrc automatically.
autocmd MyAutoCmd BufWritePost .vimrc,vimrc,*.rc.vim,*.toml source $MYVIMRC | redraw

" Auto reload VimScript.
autocmd MyAutoCmd BufWritePost,FileWritePost *.vim nested
\ if &l:autoread > 0 | source <afile> |
\   echo 'source ' . bufname('%') |
\ endif

" Vim Tabber
" ----------
set tabline=%!tabber#TabLine()
set guioptions-=e

" Simpler Diff View
" -----------------
set diffopt+=iwhite,vertical

" Easier Terminal for neo-layout
" ------------------------------
tnoremap <Esc> <C-\><C-n>
tnoremap <expr> <C-R> '<C-\><C-N>"'.nr2char(getchar()).'pi'
'''

[ftplugin]

_ = '''
  " Disable automatically insert comment.
  setl formatoptions-=ro
  setl formatoptions+=mMBl

  " Disable auto wrap.
  if &l:textwidth != 70 && &filetype !=# 'help'
    setlocal textwidth=0
  endif

  if !&l:modifiable
    setlocal foldcolumn=0
    setlocal nofoldenable
    setlocal foldcolumn=0
  endif
'''

vim = '''
  if line('$') > 1000
    syntax sync minlines=200
  endif

  setlocal foldmethod=indent
  setlocal shiftwidth=2 softtabstop=2
  setlocal iskeyword+=:,#
  setlocal colorcolumn=80
'''

toml = '''
  syntax sync minlines=500
  setlocal softtabstop=2 shiftwidth=2 tabstop=2 expandtab
  setlocal colorcolumn=80
'''

ps1 = '''
  setlocal softtabstop=4 shiftwidth=4 tabstop=4 expandtab
  setlocal textwidth=80 formatoptions-=t wrapmargin=40
  setlocal iskeyword=A-Z,a-z,48-57,_,-
  setlocal colorcolumn=80
'''

pandoc = '''
  setlocal softtabstop=4 shiftwidth=4 tabstop=4 expandtab
  setlocal textwidth=80 formatoptions-=t wrapmargin=40
  setlocal colorcolumn=80
'''

markdown = '''
  setlocal softtabstop=4 shiftwidth=4 tabstop=4 expandtab
  setlocal textwidth=80 formatoptions-=t wrapmargin=40
'''

go = '''
  setlocal softtabstop=8 shiftwidth=8 tabstop=8 noexpandtab
  setlocal colorcolumn=80
'''

sh = '''
  setlocal softtabstop=2 shiftwidth=2 tabstop=2 expandtab
  setlocal colorcolumn=80
'''

# ps1pester = '''
# let &l:makeprg = vimrc_ca#find_powershell() . ' -NonInteractive -NoProfile -Command "' . "[Threading.Thread]::CurrentThread.CurrentUICulture = 'en-US' ; Invoke-Pester -Script %:p:S -Show Fails". '"'
# " *>H:\\RemoteExecute\\PesterErrors.txt" . '"'
# setl errorformat=%+GDescribing\ %.%#,%+G[-]%.%#,%+G[+]%.%#,%+GTests\ completed\ in%.%#,%+GPassed:\ %*\\d\\,\ Failed:\ %*\\d\\,\ Skipped:\ %*\\d\\,\ Pending:\ %*\\d\\,\ Inconclusive:\ %*\\d
# setl errorformat+=%+E\ [-]\ %m,%+C\ \ \ Expected:\ %.%#,%+C\ \ \ But\ was:\ %.%#,%C\ \ \ %*\\d:\ %m,%Z\ \ \ at\ %.ScriptBlock%.\\,\ %f:\ line\ %l
# setl errorformat+=%+E%*\\k\ :\ %.%#,%CAt\ %f:%l\ char:%c,%-C%.%#,%-G%.%#
# " setl errorformat=%+GDescribing\ %.%#,%+G[-]%.%#,%+G[+]%.%#,%+GTests\ completed\ in%.%#,%+GPassed:\ %*\\d\\,\ Failed:\ %*\\d\\,\ Skipped:\ %*\\d\\,\ Pending:\ %*\\d\\,\ Inconclusive:\ %*\\d,%+E\ [-]\ %m,%+C\ \ \ Expected:\ %.%#,%+C\ \ \ But\ was:\ %.%#,%C\ \ \ %*\\d:\ %m,%Z\ \ \ at\ %.ScriptBlock%.\\,\ %f:\ line\ %l,%+E%*\\k\ :\ %.%#,%CAt\ %f:%l\ char:%c,%-C%.%#,%-G%.%#
# '''

