[[plugins]]
repo = 'tpope/vim-fugitive'
# merged = 0

[[plugins]]
repo = 'jreybert/vimagit'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update= 'call vimrc_ca#install_vimproc()'

[[plugins]]
repo = 'junegunn/vim-emoji'

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'cespare/vim-toml'

# [[plugins]]
# repo = 'rcmdnk/vim-markdown'

[[plugins]]
repo = 'fweep/vim-tabber'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
set laststatus=2 " Always display statusline in all windows
set ambiwidth=single " needed for powerfonts

let g:airline_powerline_fonts = 1
let g:airline_detect_modified = 1
let g:airline_detect_paste = 1

" Extensions
let g:airline#extensions#virtualenv#enabled = 1
let g:airline#extensions#coc#enabled = 1

" Whitespace warnings
let g:airline#extensions#whitespace#enabled = 1
let g:airline#extensions#whitespace#checks = [
  \ 'indent',
  \ 'trailing',
  \ 'long',
  \ 'mixed-indent-file',
  \ ]

" Titles for special buffers
let g:airline#extensions#quickfix#quickfix_text = 'Quickfix'
let g:airline#extensions#quickfix#location_text = 'Location'

" Fugitive integration
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#branch#format = 2

let s:spc =  nr2char(0x20, 1)
let g:airline_section_z = airline#section#create(['windowswap', 'obsession', '0x%B'.s:spc, '%3p%%'.s:spc, 'linenr', 'maxlinenr', s:spc.':%3v'])
'''

[[plugins]]
repo = 'chrisbra/SudoEdit.vim'
hook_add = '''
if IsWindows()
  let g:sudoAuth="uac"
endif
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'PProvost/vim-ps1'

[[plugins]]
repo = 'interleaved/vim-pester'

[[plugins]]
repo = 'lifepillar/vim-solarized8'
hook_source = '''
colorscheme solarized8
set background=light
'''
hook_add = '''
let g:solarized_extra_hi_groups = 1
'''

[[plugins]]
repo = 'mhinz/vim-signify'
hook_add = '''
let g:signify_vcs_list = [ 'git', 'tfs' ]
let g:signify_realtime = 1
'''

[[plugins]]
repo = 's3rvac/AutoFenc'
hook_add = '''
  let g:autofenc_enable = 1
  let g:autofenc_emit_messages = 0
  let g:autofenc_autodetect_bom = 1
  let g:autofenc_autodetect_html = 1
  let g:autofenc_autodetect_xml = 1
  let g:autofenc_autodetect_css = 1
  let g:autofenc_autodetect_comment = 1
  let g:autofenc_autodetect_ext_prog = 1
  if IsWindows()
    let g:autofenc_ext_prog_path="C:\\msys64\\mingw64\\bin\\enca.exe"
  endif
  let g:autofenc_ext_prog_args="-i -L none"
'''

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'mrtazz/simplenote.vim'

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'sgur/unite-everything'
if = 'IsWindows()'
hook_add = '''
  " let g:unite_source_everything_limit = 100
  let g:unite_source_everything_full_path_search = 1
  let g:unite_source_everything_posix_regexp_search = 1
  let g:unite_source_everything_sort_by_full_name = 0
  let g:unite_source_everything_case_sensitive_search = 1
  let g:unite_source_everything_async_minimum_length = 3
'''

[[plugins]]
repo = 'tpope/vim-scriptease'

[[plugins]]
repo = 'tpope/vim-git'

[[plugins]]
repo = 'vim-pandoc/vim-pandoc'

[[plugins]]
repo = 'vim-pandoc/vim-pandoc-syntax'

[[plugins]]
repo = 'wsdjeg/dein-ui.vim'

